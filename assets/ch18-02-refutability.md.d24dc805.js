import{_ as s,c as n,o as a,d as l}from"./app.81eb1235.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Refutability\uFF08\u53EF\u53CD\u9A73\u6027\uFF09: \u6A21\u5F0F\u662F\u5426\u4F1A\u5339\u914D\u5931\u6548","slug":"refutability-\u53EF\u53CD\u9A73\u6027-\u6A21\u5F0F\u662F\u5426\u4F1A\u5339\u914D\u5931\u6548","link":"#refutability-\u53EF\u53CD\u9A73\u6027-\u6A21\u5F0F\u662F\u5426\u4F1A\u5339\u914D\u5931\u6548","children":[]}],"relativePath":"ch18-02-refutability.md","lastUpdated":1668669277000}'),e={name:"ch18-02-refutability.md"},o=l(`<h2 id="refutability-\u53EF\u53CD\u9A73\u6027-\u6A21\u5F0F\u662F\u5426\u4F1A\u5339\u914D\u5931\u6548" tabindex="-1">Refutability\uFF08\u53EF\u53CD\u9A73\u6027\uFF09: \u6A21\u5F0F\u662F\u5426\u4F1A\u5339\u914D\u5931\u6548 <a class="header-anchor" href="#refutability-\u53EF\u53CD\u9A73\u6027-\u6A21\u5F0F\u662F\u5426\u4F1A\u5339\u914D\u5931\u6548" aria-hidden="true">#</a></h2><blockquote><p><a href="https://github.com/rust-lang/book/blob/main/src/ch18-02-refutability.md" target="_blank" rel="noreferrer">ch18-02-refutability.md</a><br> commit d44317c3122b44fb713aba66cc295dee3453b24b</p></blockquote><p>\u6A21\u5F0F\u6709\u4E24\u79CD\u5F62\u5F0F\uFF1Arefutable\uFF08\u53EF\u53CD\u9A73\u7684\uFF09\u548C irrefutable\uFF08\u4E0D\u53EF\u53CD\u9A73\u7684\uFF09\u3002\u80FD\u5339\u914D\u4EFB\u4F55\u4F20\u9012\u7684\u53EF\u80FD\u503C\u7684\u6A21\u5F0F\u88AB\u79F0\u4E3A\u662F <strong>\u4E0D\u53EF\u53CD\u9A73\u7684</strong>\uFF08<em>irrefutable</em>\uFF09\u3002\u4E00\u4E2A\u4F8B\u5B50\u5C31\u662F <code>let x = 5;</code> \u8BED\u53E5\u4E2D\u7684 <code>x</code>\uFF0C\u56E0\u4E3A <code>x</code> \u53EF\u4EE5\u5339\u914D\u4EFB\u4F55\u503C\u6240\u4EE5\u4E0D\u53EF\u80FD\u4F1A\u5931\u8D25\u3002\u5BF9\u67D0\u4E9B\u53EF\u80FD\u7684\u503C\u8FDB\u884C\u5339\u914D\u4F1A\u5931\u8D25\u7684\u6A21\u5F0F\u88AB\u79F0\u4E3A\u662F <strong>\u53EF\u53CD\u9A73\u7684</strong>\uFF08<em>refutable</em>\uFF09\u3002\u4E00\u4E2A\u8FD9\u6837\u7684\u4F8B\u5B50\u4FBF\u662F <code>if let Some(x) = a_value</code> \u8868\u8FBE\u5F0F\u4E2D\u7684 <code>Some(x)</code>\uFF1B\u5982\u679C\u53D8\u91CF <code>a_value</code> \u4E2D\u7684\u503C\u662F <code>None</code> \u800C\u4E0D\u662F <code>Some</code>\uFF0C\u90A3\u4E48 <code>Some(x)</code> \u6A21\u5F0F\u4E0D\u80FD\u5339\u914D\u3002</p><p>\u51FD\u6570\u53C2\u6570\u3001 <code>let</code> \u8BED\u53E5\u548C <code>for</code> \u5FAA\u73AF\u53EA\u80FD\u63A5\u53D7\u4E0D\u53EF\u53CD\u9A73\u7684\u6A21\u5F0F\uFF0C\u56E0\u4E3A\u901A\u8FC7\u4E0D\u5339\u914D\u7684\u503C\u7A0B\u5E8F\u65E0\u6CD5\u8FDB\u884C\u6709\u610F\u4E49\u7684\u5DE5\u4F5C\u3002<code>if let</code> \u548C <code>while let</code> \u8868\u8FBE\u5F0F\u88AB\u9650\u5236\u4E3A\u53EA\u80FD\u63A5\u53D7\u53EF\u53CD\u9A73\u7684\u6A21\u5F0F\uFF0C\u56E0\u4E3A\u6839\u636E\u5B9A\u4E49\u4ED6\u4EEC\u610F\u5728\u5904\u7406\u53EF\u80FD\u7684\u5931\u8D25\uFF1A\u6761\u4EF6\u8868\u8FBE\u5F0F\u7684\u529F\u80FD\u5C31\u662F\u6839\u636E\u6210\u529F\u6216\u5931\u8D25\u6267\u884C\u4E0D\u540C\u7684\u64CD\u4F5C\u3002</p><p>\u901A\u5E38\u6211\u4EEC\u65E0\u9700\u62C5\u5FC3\u53EF\u53CD\u9A73\u548C\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\u7684\u533A\u522B\uFF0C\u4E0D\u8FC7\u786E\u5B9E\u9700\u8981\u719F\u6089\u53EF\u53CD\u9A73\u6027\u7684\u6982\u5FF5\uFF0C\u8FD9\u6837\u5F53\u5728\u9519\u8BEF\u4FE1\u606F\u4E2D\u770B\u5230\u65F6\u5C31\u77E5\u9053\u5982\u4F55\u5E94\u5BF9\u3002\u9047\u5230\u8FD9\u4E9B\u60C5\u51B5\uFF0C\u6839\u636E\u4EE3\u7801\u884C\u4E3A\u7684\u610F\u56FE\uFF0C\u9700\u8981\u4FEE\u6539\u6A21\u5F0F\u6216\u8005\u4F7F\u7528\u6A21\u5F0F\u7684\u7ED3\u6784\u3002</p><p>\u8BA9\u6211\u4EEC\u770B\u770B\u4E00\u4E2A\u5C1D\u8BD5\u5728 Rust \u8981\u6C42\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\u7684\u5730\u65B9\u4F7F\u7528\u53EF\u53CD\u9A73\u6A21\u5F0F\u4EE5\u53CA\u76F8\u53CD\u60C5\u51B5\u7684\u4F8B\u5B50\u3002\u5728\u793A\u4F8B 18-8 \u4E2D\uFF0C\u6709\u4E00\u4E2A <code>let</code> \u8BED\u53E5\uFF0C\u4E0D\u8FC7\u6A21\u5F0F\u88AB\u6307\u5B9A\u4E3A\u53EF\u53CD\u9A73\u6A21\u5F0F <code>Some(x)</code>\u3002\u5982\u4F60\u6240\u89C1\uFF0C\u8FD9\u4E0D\u80FD\u7F16\u8BD1\uFF1A</p><div class="language-rs"><button title="Copy Code" class="copy"></button><span class="lang">rs</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> some_option_value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Option</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">i32</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">None</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">    // ANCHOR: here</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Some</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> some_option_value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">    // ANCHOR_END: here</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><span class="caption">\u793A\u4F8B 18-8: \u5C1D\u8BD5\u5728 <code>let</code> \u4E2D\u4F7F\u7528\u53EF\u53CD\u9A73\u6A21\u5F0F</span></p><p>\u5982\u679C <code>some_option_value</code> \u7684\u503C\u662F <code>None</code>\uFF0C\u5176\u4E0D\u4F1A\u6210\u529F\u5339\u914D\u6A21\u5F0F <code>Some(x)</code>\uFF0C\u8868\u660E\u8FD9\u4E2A\u6A21\u5F0F\u662F\u53EF\u53CD\u9A73\u7684\u3002\u7136\u800C\uFF0C\u56E0\u4E3A <code>let</code> \u5BF9\u4E8E <code>None</code> \u5339\u914D\u4E0D\u80FD\u4EA7\u751F\u4EFB\u4F55\u5408\u6CD5\u7684\u4EE3\u7801\uFF0C\u6240\u4EE5 <code>let</code> \u8BED\u53E5\u53EA\u80FD\u63A5\u53D7\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\u3002Rust \u4F1A\u5728\u7F16\u8BD1\u65F6\u62B1\u6028\u6211\u4EEC\u5C1D\u8BD5\u5728\u8981\u6C42\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\u7684\u5730\u65B9\u4F7F\u7528\u53EF\u53CD\u9A73\u6A21\u5F0F\uFF1A</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ cargo run</span></span>
<span class="line"><span style="color:#A6ACCD;">   Compiling patterns v0.1.0 (file:///projects/patterns)</span></span>
<span class="line"><span style="color:#A6ACCD;">error[E0005]: refutable pattern in local binding: \`None\` not covered</span></span>
<span class="line"><span style="color:#A6ACCD;">   --&gt; src/main.rs:3:9</span></span>
<span class="line"><span style="color:#A6ACCD;">    |</span></span>
<span class="line"><span style="color:#A6ACCD;">3   |     let Some(x) = some_option_value;</span></span>
<span class="line"><span style="color:#A6ACCD;">    |         ^^^^^^^ pattern \`None\` not covered</span></span>
<span class="line"><span style="color:#A6ACCD;">    |</span></span>
<span class="line"><span style="color:#A6ACCD;">    = note: \`let\` bindings require an &quot;irrefutable pattern&quot;, like a \`struct\` or an \`enum\` with only one variant</span></span>
<span class="line"><span style="color:#A6ACCD;">    = note: for more information, visit https://doc.rust-lang.org/book/ch18-02-refutability.html</span></span>
<span class="line"><span style="color:#A6ACCD;">    = note: the matched value is of type \`Option&lt;i32&gt;\`</span></span>
<span class="line"><span style="color:#A6ACCD;">help: you might want to use \`if let\` to ignore the variant that isn&#39;t matched</span></span>
<span class="line"><span style="color:#A6ACCD;">    |</span></span>
<span class="line"><span style="color:#A6ACCD;">3   |     if let Some(x) = some_option_value { /* */ }</span></span>
<span class="line"><span style="color:#A6ACCD;">    |</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">For more information about this error, try \`rustc --explain E0005\`.</span></span>
<span class="line"><span style="color:#A6ACCD;">error: could not compile \`patterns\` due to previous error</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u56E0\u4E3A\u6211\u4EEC\u6CA1\u6709\u8986\u76D6\uFF08\u4E5F\u4E0D\u53EF\u80FD\u8986\u76D6\uFF01\uFF09\u5230\u6A21\u5F0F <code>Some(x)</code> \u7684\u6BCF\u4E00\u4E2A\u53EF\u80FD\u7684\u503C\uFF0C\u6240\u4EE5 Rust \u4F1A\u5408\u7406\u5730\u6297\u8BAE\u3002</p><p>\u4E3A\u4E86\u4FEE\u590D\u5728\u9700\u8981\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\u7684\u5730\u65B9\u4F7F\u7528\u53EF\u53CD\u9A73\u6A21\u5F0F\u7684\u60C5\u51B5\uFF0C\u53EF\u4EE5\u4FEE\u6539\u4F7F\u7528\u6A21\u5F0F\u7684\u4EE3\u7801\uFF1A\u4E0D\u540C\u4E8E\u4F7F\u7528 <code>let</code>\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>if let</code>\u3002\u5982\u6B64\uFF0C\u5982\u679C\u6A21\u5F0F\u4E0D\u5339\u914D\uFF0C\u5927\u62EC\u53F7\u4E2D\u7684\u4EE3\u7801\u5C06\u88AB\u5FFD\u7565\uFF0C\u5176\u4F59\u4EE3\u7801\u4FDD\u6301\u6709\u6548\u3002\u793A\u4F8B 18-9 \u5C55\u793A\u4E86\u5982\u4F55\u4FEE\u590D\u793A\u4F8B 18-8 \u4E2D\u7684\u4EE3\u7801\u3002</p><div class="language-rs"><button title="Copy Code" class="copy"></button><span class="lang">rs</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> some_option_value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Option</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">i32</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">None</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">    // ANCHOR: here</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Some</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> some_option_value </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;{}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">    // ANCHOR_END: here</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><span class="caption">\u793A\u4F8B 18-9: \u4F7F\u7528 <code>if let</code> \u548C\u4E00\u4E2A\u5E26\u6709\u53EF\u53CD\u9A73\u6A21\u5F0F\u7684\u4EE3\u7801\u5757\u6765\u4EE3\u66FF <code>let</code></span></p><p>\u6211\u4EEC\u7ED9\u4E86\u4EE3\u7801\u4E00\u4E2A\u5F97\u4EE5\u7EE7\u7EED\u7684\u51FA\u8DEF\uFF01\u867D\u7136\u6211\u4EEC\u6CA1\u529E\u6CD5\u5728\u907F\u514D\u4EA7\u751F\u9519\u8BEF\u7684\u60C5\u51B5\u4E0B\u4F7F\u7528\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\uFF0C\u4F46\u8FD9\u6BB5\u4F7F\u7528\u53EF\u53CD\u9A73\u6A21\u5F0F\u7684\u4EE3\u7801\u662F\u5B8C\u5168\u6709\u6548\u7684\u3002\u5982\u679C\u4E3A <code>if let</code> \u63D0\u4F9B\u4E86\u4E00\u4E2A\u603B\u662F\u4F1A\u5339\u914D\u7684\u6A21\u5F0F\uFF0C\u6BD4\u5982\u793A\u4F8B 18-10 \u4E2D\u7684 <code>x</code>\uFF0C\u7F16\u8BD1\u5668\u4F1A\u7ED9\u51FA\u4E00\u4E2A\u8B66\u544A\uFF1A</p><div class="language-rs"><button title="Copy Code" class="copy"></button><span class="lang">rs</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">    // ANCHOR: here</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">println!</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;{}&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;">    // ANCHOR_END: here</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><span class="caption">\u793A\u4F8B 18-10: \u5C1D\u8BD5\u628A\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\u7528\u5230 <code>if let</code> \u4E0A</span></p><p>Rust \u4F1A\u62B1\u6028\u5C06\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\u7528\u4E8E <code>if let</code> \u662F\u6CA1\u6709\u610F\u4E49\u7684\uFF1A</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ cargo run</span></span>
<span class="line"><span style="color:#A6ACCD;">   Compiling patterns v0.1.0 (file:///projects/patterns)</span></span>
<span class="line"><span style="color:#A6ACCD;">warning: irrefutable \`if let\` pattern</span></span>
<span class="line"><span style="color:#A6ACCD;"> --&gt; src/main.rs:2:8</span></span>
<span class="line"><span style="color:#A6ACCD;">  |</span></span>
<span class="line"><span style="color:#A6ACCD;">2 |     if let x = 5 {</span></span>
<span class="line"><span style="color:#A6ACCD;">  |        ^^^^^^^^^</span></span>
<span class="line"><span style="color:#A6ACCD;">  |</span></span>
<span class="line"><span style="color:#A6ACCD;">  = note: \`#[warn(irrefutable_let_patterns)]\` on by default</span></span>
<span class="line"><span style="color:#A6ACCD;">  = note: this pattern will always match, so the \`if let\` is useless</span></span>
<span class="line"><span style="color:#A6ACCD;">  = help: consider replacing the \`if let\` with a \`let\`</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">warning: \`patterns\` (bin &quot;patterns&quot;) generated 1 warning</span></span>
<span class="line"><span style="color:#A6ACCD;">    Finished dev [unoptimized + debuginfo] target(s) in 0.39s</span></span>
<span class="line"><span style="color:#A6ACCD;">     Running \`target/debug/patterns\`</span></span>
<span class="line"><span style="color:#A6ACCD;">5</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u57FA\u4E8E\u6B64\uFF0C<code>match</code>\u5339\u914D\u5206\u652F\u5FC5\u987B\u4F7F\u7528\u53EF\u53CD\u9A73\u6A21\u5F0F\uFF0C\u9664\u4E86\u6700\u540E\u4E00\u4E2A\u5206\u652F\u9700\u8981\u4F7F\u7528\u80FD\u5339\u914D\u4EFB\u4F55\u5269\u4F59\u503C\u7684\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\u3002Rust\u5141\u8BB8\u6211\u4EEC\u5728\u53EA\u6709\u4E00\u4E2A\u5339\u914D\u5206\u652F\u7684<code>match</code>\u4E2D\u4F7F\u7528\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\uFF0C\u4E0D\u8FC7\u8FD9\u4E48\u505A\u4E0D\u662F\u7279\u522B\u6709\u7528\uFF0C\u5E76\u53EF\u4EE5\u88AB\u66F4\u7B80\u5355\u7684 <code>let</code> \u8BED\u53E5\u66FF\u4EE3\u3002</p><p>\u76EE\u524D\u6211\u4EEC\u5DF2\u7ECF\u8BA8\u8BBA\u4E86\u6240\u6709\u53EF\u4EE5\u4F7F\u7528\u6A21\u5F0F\u7684\u5730\u65B9\uFF0C\u4EE5\u53CA\u53EF\u53CD\u9A73\u6A21\u5F0F\u4E0E\u4E0D\u53EF\u53CD\u9A73\u6A21\u5F0F\u7684\u533A\u522B\uFF0C\u4E0B\u9762\u8BA9\u6211\u4EEC\u4E00\u8D77\u53BB\u628A\u53EF\u4EE5\u7528\u6765\u521B\u5EFA\u6A21\u5F0F\u7684\u8BED\u6CD5\u8FC7\u76EE\u4E00\u904D\u5427\u3002</p>`,21),p=[o];function t(c,r,i,C,A,y){return a(),n("div",null,p)}const F=s(e,[["render",t]]);export{d as __pageData,F as default};
