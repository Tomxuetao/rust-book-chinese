import{_ as s,c as a,o as n,d as e}from"./app.a07ec8df.js";const y=JSON.parse('{"title":"\u9644\u5F55 D\uFF1A\u5B9E\u7528\u5F00\u53D1\u5DE5\u5177","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u901A\u8FC7 rustfmt \u81EA\u52A8\u683C\u5F0F\u5316","slug":"\u901A\u8FC7-rustfmt-\u81EA\u52A8\u683C\u5F0F\u5316","link":"#\u901A\u8FC7-rustfmt-\u81EA\u52A8\u683C\u5F0F\u5316","children":[]},{"level":2,"title":"\u901A\u8FC7 rustfix \u4FEE\u590D\u4EE3\u7801","slug":"\u901A\u8FC7-rustfix-\u4FEE\u590D\u4EE3\u7801","link":"#\u901A\u8FC7-rustfix-\u4FEE\u590D\u4EE3\u7801","children":[{"level":3,"title":"\u901A\u8FC7 clippy \u63D0\u4F9B\u66F4\u591A lint \u529F\u80FD","slug":"\u901A\u8FC7-clippy-\u63D0\u4F9B\u66F4\u591A-lint-\u529F\u80FD","link":"#\u901A\u8FC7-clippy-\u63D0\u4F9B\u66F4\u591A-lint-\u529F\u80FD","children":[]},{"level":3,"title":"\u4F7F\u7528 rust-analyzer \u7684 IDE \u96C6\u6210","slug":"\u4F7F\u7528-rust-analyzer-\u7684-ide-\u96C6\u6210","link":"#\u4F7F\u7528-rust-analyzer-\u7684-ide-\u96C6\u6210","children":[]}]}],"relativePath":"appendix-04-useful-development-tools.md","lastUpdated":1671183283000}'),l={name:"appendix-04-useful-development-tools.md"},p=e(`<h1 id="\u9644\u5F55-d-\u5B9E\u7528\u5F00\u53D1\u5DE5\u5177" tabindex="-1">\u9644\u5F55 D\uFF1A\u5B9E\u7528\u5F00\u53D1\u5DE5\u5177 <a class="header-anchor" href="#\u9644\u5F55-d-\u5B9E\u7528\u5F00\u53D1\u5DE5\u5177" aria-hidden="true">#</a></h1><blockquote><p><a href="https://github.com/rust-lang/book/blob/main/src/appendix-04-useful-development-tools.md" target="_blank" rel="noreferrer">appendix-04-useful-development-tools.md</a><br> commit efbafdba3618487fbc9305318fcab9775132ac15</p></blockquote><p>\u672C\u9644\u5F55\uFF0C\u6211\u4EEC\u5C06\u8BA8\u8BBA Rust \u9879\u76EE\u63D0\u4F9B\u7684\u7528\u4E8E\u5F00\u53D1 Rust \u4EE3\u7801\u7684\u5DE5\u5177\u3002</p><h2 id="\u901A\u8FC7-rustfmt-\u81EA\u52A8\u683C\u5F0F\u5316" tabindex="-1">\u901A\u8FC7 <code>rustfmt</code> \u81EA\u52A8\u683C\u5F0F\u5316 <a class="header-anchor" href="#\u901A\u8FC7-rustfmt-\u81EA\u52A8\u683C\u5F0F\u5316" aria-hidden="true">#</a></h2><p><code>rustfmt</code> \u5DE5\u5177\u6839\u636E\u793E\u533A\u4EE3\u7801\u98CE\u683C\u683C\u5F0F\u5316\u4EE3\u7801\u3002\u5F88\u591A\u9879\u76EE\u4F7F\u7528 <code>rustfmt</code> \u6765\u907F\u514D\u7F16\u5199 Rust \u98CE\u683C\u7684\u4E89\u8BBA\uFF1A\u6240\u6709\u4EBA\u90FD\u7528\u8FD9\u4E2A\u5DE5\u5177\u683C\u5F0F\u5316\u4EE3\u7801\uFF01</p><p>\u5B89\u88C5 <code>rustfmt</code>\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ rustup component add rustfmt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8FD9\u4F1A\u63D0\u4F9B <code>rustfmt</code> \u548C <code>cargo-fmt</code>\uFF0C\u7C7B\u4F3C\u4E8E Rust \u540C\u65F6\u5B89\u88C5 <code>rustc</code> \u548C <code>cargo</code>\u3002\u4E3A\u4E86\u683C\u5F0F\u5316\u6574\u4E2A Cargo \u9879\u76EE\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ cargo fmt</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8FD0\u884C\u6B64\u547D\u4EE4\u4F1A\u683C\u5F0F\u5316\u5F53\u524D crate \u4E2D\u6240\u6709\u7684 Rust \u4EE3\u7801\u3002\u8FD9\u5E94\u8BE5\u53EA\u4F1A\u6539\u53D8\u4EE3\u7801\u98CE\u683C\uFF0C\u800C\u4E0D\u662F\u4EE3\u7801\u8BED\u4E49\u3002\u8BF7\u67E5\u770B <a href="https://github.com/rust-lang/rustfmt" target="_blank" rel="noreferrer">\u8BE5\u6587\u6863</a> \u4E86\u89E3 <code>rustfmt</code> \u7684\u66F4\u591A\u4FE1\u606F\u3002</p><h2 id="\u901A\u8FC7-rustfix-\u4FEE\u590D\u4EE3\u7801" tabindex="-1">\u901A\u8FC7 <code>rustfix</code> \u4FEE\u590D\u4EE3\u7801 <a class="header-anchor" href="#\u901A\u8FC7-rustfix-\u4FEE\u590D\u4EE3\u7801" aria-hidden="true">#</a></h2><p>\u5982\u679C\u4F60\u7F16\u5199\u8FC7 Rust \u4EE3\u7801\uFF0C\u90A3\u4E48\u4F60\u53EF\u80FD\u89C1\u8FC7\u90A3\u4E9B\u6709\u5F88\u660E\u663E\u4FEE\u590D\u65B9\u5F0F\u7684\u7F16\u8BD1\u5668\u8B66\u544A\u3002\u4F8B\u5982\uFF0C\u8003\u8651\u5982\u4E0B\u4EE3\u7801\uFF1A</p><p><span class="filename">\u6587\u4EF6\u540D: src/main.rs</span></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">fn do_something() {}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">fn main() {</span></span>
<span class="line"><span style="color:#A6ACCD;">    for i in 0..100 {</span></span>
<span class="line"><span style="color:#A6ACCD;">        do_something();</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8FD9\u91CC\u8C03\u7528\u4E86 <code>do_something</code> \u51FD\u6570 100 \u6B21\uFF0C\u4E0D\u8FC7\u4ECE\u672A\u5728 <code>for</code> \u5FAA\u73AF\u4F53\u4E2D\u4F7F\u7528\u53D8\u91CF <code>i</code>\u3002Rust \u4F1A\u8B66\u544A\u8BF4\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ cargo build</span></span>
<span class="line"><span style="color:#A6ACCD;">   Compiling myprogram v0.1.0 (file:///projects/myprogram)</span></span>
<span class="line"><span style="color:#A6ACCD;">warning: unused variable: \`i\`</span></span>
<span class="line"><span style="color:#A6ACCD;"> --&gt; src/main.rs:4:9</span></span>
<span class="line"><span style="color:#A6ACCD;">  |</span></span>
<span class="line"><span style="color:#A6ACCD;">4 |     for i in 0..100 {</span></span>
<span class="line"><span style="color:#A6ACCD;">  |         ^ help: consider using \`_i\` instead</span></span>
<span class="line"><span style="color:#A6ACCD;">  |</span></span>
<span class="line"><span style="color:#A6ACCD;">  = note: #[warn(unused_variables)] on by default</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    Finished dev [unoptimized + debuginfo] target(s) in 0.50s</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8B66\u544A\u4E2D\u5EFA\u8BAE\u4F7F\u7528 <code>_i</code> \u540D\u79F0\uFF1A\u4E0B\u5212\u7EBF\u8868\u660E\u8BE5\u53D8\u91CF\u6709\u610F\u4E0D\u4F7F\u7528\u3002\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7 <code>cargo fix</code> \u547D\u4EE4\u4F7F\u7528 <code>rustfix</code> \u5DE5\u5177\u6765\u81EA\u52A8\u91C7\u7528\u8BE5\u5EFA\u8BAE\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ cargo fix</span></span>
<span class="line"><span style="color:#A6ACCD;">    Checking myprogram v0.1.0 (file:///projects/myprogram)</span></span>
<span class="line"><span style="color:#A6ACCD;">      Fixing src/main.rs (1 fix)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Finished dev [unoptimized + debuginfo] target(s) in 0.59s</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5982\u679C\u518D\u6B21\u67E5\u770B <em>src/main.rs</em>\uFF0C\u4F1A\u53D1\u73B0 <code>cargo fix</code> \u4FEE\u6539\u4E86\u4EE3\u7801\uFF1A</p><p><span class="filename">\u6587\u4EF6\u540D: src/main.rs</span></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">fn do_something() {}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">fn main() {</span></span>
<span class="line"><span style="color:#A6ACCD;">    for _i in 0..100 {</span></span>
<span class="line"><span style="color:#A6ACCD;">        do_something();</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u73B0\u5728 <code>for</code> \u5FAA\u73AF\u53D8\u91CF\u53D8\u4E3A <code>_i</code>\uFF0C\u8B66\u544A\u4E5F\u4E0D\u518D\u51FA\u73B0\u3002</p><p><code>cargo fix</code> \u547D\u4EE4\u53EF\u4EE5\u7528\u4E8E\u5728\u4E0D\u540C Rust \u7248\u672C\u95F4\u8FC1\u79FB\u4EE3\u7801\u3002\u7248\u672C\u5728\u9644\u5F55 E \u4E2D\u4ECB\u7ECD\u3002</p><h3 id="\u901A\u8FC7-clippy-\u63D0\u4F9B\u66F4\u591A-lint-\u529F\u80FD" tabindex="-1">\u901A\u8FC7 <code>clippy</code> \u63D0\u4F9B\u66F4\u591A lint \u529F\u80FD <a class="header-anchor" href="#\u901A\u8FC7-clippy-\u63D0\u4F9B\u66F4\u591A-lint-\u529F\u80FD" aria-hidden="true">#</a></h3><p><code>clippy</code> \u5DE5\u5177\u662F\u4E00\u7CFB\u5217 lint \u7684\u96C6\u5408\uFF0C\u7528\u4E8E\u6355\u6349\u5E38\u89C1\u9519\u8BEF\u548C\u6539\u8FDB Rust \u4EE3\u7801\u3002</p><p>\u5B89\u88C5 <code>clippy</code>\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ rustup component add clippy</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5BF9\u4EFB\u4F55 Cargo \u9879\u76EE\u8FD0\u884C clippy \u7684 lint\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ cargo clippy</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u4F8B\u5982\uFF0C\u5982\u679C\u7A0B\u5E8F\u4F7F\u7528\u4E86\u5982 pi \u8FD9\u6837\u6570\u5B66\u5E38\u6570\u7684\u8FD1\u4F3C\u503C\uFF0C\u5982\u4E0B\uFF1A</p><p><span class="filename">\u6587\u4EF6\u540D: src/main.rs</span></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">fn main() {</span></span>
<span class="line"><span style="color:#A6ACCD;">    let x = 3.1415;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let r = 8.0;</span></span>
<span class="line"><span style="color:#A6ACCD;">    println!(&quot;the area of the circle is {}&quot;, x * r * r);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5728\u6B64\u9879\u76EE\u4E0A\u8FD0\u884C <code>cargo clippy</code> \u4F1A\u5BFC\u81F4\u8FD9\u4E2A\u9519\u8BEF\uFF1A</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">error: approximate value of \`f{32, 64}::consts::PI\` found. Consider using it directly</span></span>
<span class="line"><span style="color:#A6ACCD;"> --&gt; src/main.rs:2:13</span></span>
<span class="line"><span style="color:#A6ACCD;">  |</span></span>
<span class="line"><span style="color:#A6ACCD;">2 |     let x = 3.1415;</span></span>
<span class="line"><span style="color:#A6ACCD;">  |             ^^^^^^</span></span>
<span class="line"><span style="color:#A6ACCD;">  |</span></span>
<span class="line"><span style="color:#A6ACCD;">  = note: #[deny(clippy::approx_constant)] on by default</span></span>
<span class="line"><span style="color:#A6ACCD;">  = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/master/index.html#approx_constant</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8FD9\u544A\u8BC9\u6211\u4EEC Rust \u5B9A\u4E49\u4E86\u66F4\u4E3A\u7CBE\u786E\u7684\u5E38\u91CF\uFF0C\u800C\u5982\u679C\u4F7F\u7528\u4E86\u8FD9\u4E9B\u5E38\u91CF\u7A0B\u5E8F\u5C06\u66F4\u52A0\u51C6\u786E\u3002\u5982\u4E0B\u4EE3\u7801\u5C31\u4E0D\u4F1A\u5BFC\u81F4 <code>clippy</code> \u4EA7\u751F\u4EFB\u4F55\u9519\u8BEF\u6216\u8B66\u544A\uFF1A</p><p><span class="filename">\u6587\u4EF6\u540D: src/main.rs</span></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">fn main() {</span></span>
<span class="line"><span style="color:#A6ACCD;">    let x = std::f64::consts::PI;</span></span>
<span class="line"><span style="color:#A6ACCD;">    let r = 8.0;</span></span>
<span class="line"><span style="color:#A6ACCD;">    println!(&quot;the area of the circle is {}&quot;, x * r * r);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8BF7\u67E5\u770B <a href="https://github.com/rust-lang/rust-clippy" target="_blank" rel="noreferrer">\u5176\u6587\u6863</a> \u6765\u4E86\u89E3 <code>clippy</code> \u7684\u66F4\u591A\u4FE1\u606F\u3002</p><h3 id="\u4F7F\u7528-rust-analyzer-\u7684-ide-\u96C6\u6210" tabindex="-1">\u4F7F\u7528 <code>rust-analyzer</code> \u7684 IDE \u96C6\u6210 <a class="header-anchor" href="#\u4F7F\u7528-rust-analyzer-\u7684-ide-\u96C6\u6210" aria-hidden="true">#</a></h3><p>\u4E3A\u4E86\u5E2E\u52A9 IDE \u96C6\u6210\uFF0CRust \u793E\u533A\u5EFA\u8BAE\u4F7F\u7528 <a href="https://rust-analyzer.github.io" target="_blank" rel="noreferrer"><code>rust-analyzer</code></a>\u3002\u8FD9\u4E2A\u5DE5\u5177\u662F\u4E00\u7EC4\u4EE5\u7F16\u8BD1\u5668\u4E3A\u4E2D\u5FC3\u7684\u5B9E\u7528\u7A0B\u5E8F\uFF0C\u5B83\u5B9E\u73B0\u4E86 <a href="http://langserver.org/" target="_blank" rel="noreferrer">Language Server Protocol</a>\uFF08\u4E00\u4E2A IDE \u4E0E\u7F16\u7A0B\u8BED\u8A00\u4E4B\u95F4\u7684\u901A\u4FE1\u89C4\u8303\uFF09\u3002<code>rust-analyzer</code> \u53EF\u4EE5\u7528\u4E8E\u4E0D\u540C\u7684\u5BA2\u6237\u7AEF\uFF0C\u6BD4\u5982 <a href="https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer" target="_blank" rel="noreferrer">Visual Studio Code \u7684 Rust analyzer \u63D2\u4EF6</a>\u3002</p><p>\u8BBF\u95EE <code>rust-analyzer</code> \u9879\u76EE\u7684 <a href="https://rust-analyzer.github.io" target="_blank" rel="noreferrer">\u4E3B\u9875</a> \u6765\u4E86\u89E3\u5982\u4F55\u5B89\u88C5\u5B89\u88C5\u5B83\uFF0C\u7136\u540E\u4E3A\u4F60\u7684 IDE \u5B89\u88C5 language server \u652F\u6301\u3002\u5982\u6B64\u4F60\u7684 IDE \u4FBF\u4F1A\u83B7\u5F97\u5982\u81EA\u52A8\u8865\u5168\u3001\u8DF3\u8F6C\u5230\u5B9A\u4E49\u548C inline error \u4E4B\u7C7B\u7684\u529F\u80FD\u3002</p>`,41),o=[p];function t(c,r,i,d,C,u){return n(),a("div",null,o)}const g=s(l,[["render",t]]);export{y as __pageData,g as default};
